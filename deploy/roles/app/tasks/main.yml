---
- name: Create directory for environment files
  file:
    path: "{{ boris_app_environ_dir }}"
    state: directory
    owner: root
    mode: 700
- name: Configure environment
  template:
    src: environ
    dest: "{{boris_app_environ_file}}"
    owner: root
    mode: 600

# Create docker network, so the containers can access each other and the host
- name: Create Boris Docker network
  docker_network:
    name: "{{ boris_docker_network_name }}"
    driver: bridge
    ipam_options:
      subnet: "{{ boris_docker_network_subnet }}"
      gateway: "{{ boris_docker_network_host_ip }}"

# Allow access from containers to spiped services on the host's virtual IP
- name: Allow Docker containers to access redis on host's virtual IP
  ufw:
    rule: allow
    port: "{{ redis_secure_port }}"
    proto: tcp
    from: "{{ boris_docker_network_subnet }}"
- name: Allow Docker containers to access Postgres on host's virtual IP
  ufw:
    rule: allow
    port: "{{ postgres_secure_port }}"
    proto: tcp
    from: "{{ boris_docker_network_subnet }}"

# Postgresql Database
- name: Configure database user for the app
  postgresql_user:
    name: "{{ boris_app_db_user }}"
    db: postgres
    password: "{{ boris_app_db_password }}"
    encrypted: yes
    login_host: "{{ boris_app_db_host }}"
    login_user: "{{ database_postgres_admin_user_name }}"
    login_password: "{{ database_postgres_admin_password }}"
    port: "{{ postgres_secure_port }}"
- name: Configure database for the app
  postgresql_db:
    name: "{{ boris_app_db_name }}"
    owner: "{{ boris_app_db_user }}"
    login_host: "{{ boris_app_db_host }}"
    login_user: "{{ database_postgres_admin_user_name }}"
    login_password: "{{ database_postgres_admin_password }}"
    port: "{{ postgres_secure_port }}"
- name: Enable pgcrypto extension
  postgresql_ext:
    name: pgcrypto
    db: "{{ boris_app_db_name }}"
    login_host: "{{ boris_app_db_host }}"
    login_user: "{{ database_postgres_admin_user_name }}"
    login_password: "{{ database_postgres_admin_password }}"
    port: "{{ postgres_secure_port }}"

# DB migration?
